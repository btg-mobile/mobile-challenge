//
//  CoinListingViewController.swift
//  DesafioBTG
//
//  Created by Robson Moreira on 17/02/20.
//  Copyright (c) 2020 Robson Moreira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class CoinListingViewController: BaseViewController {
    
    @IBOutlet weak var currenciesTableView: UITableView!
    @IBOutlet weak var currenciesActivityIndicator: UIActivityIndicatorView!
    
    var isCheckedOrdeCode: Bool = true
    var isCheckedOrdeName: Bool = false
    
    var viewModel: CoinListing.Currencies.ViewModel?
    var currencySelected: CurrencySelected?
    
    var interactor: CoinListingBusinessDelegate!
    var router: (NSObjectProtocol & CoinListingRoutingDelegate & CoinListingDataPassing)!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.setupView()
        
        self.interactor.fetchCurrencies()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        
        self.interactor.getCurrencySelected()
    }
    
    internal override func setup() {
        let viewController = self
        let interactor = CoinListingInteractor()
        let presenter = CoinListingPresenter()
        let router = CoinListingRouter()
        
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private func setupView() {
        self.currenciesTableView.isHidden = true
        
        self.currenciesTableView.delegate = self
        self.currenciesTableView.dataSource = self
        
        let nibCurrency = UINib(nibName: CurrencyTableViewCell.className, bundle: nil)
        self.currenciesTableView.register(nibCurrency, forCellReuseIdentifier: CurrencyTableViewCell.classId)
        
        self.currenciesActivityIndicator.startAnimating()
        self.currenciesActivityIndicator.isHidden = false
        
        let searchController = UISearchController(searchResultsController: nil)
        searchController.searchResultsUpdater = self
        searchController.obscuresBackgroundDuringPresentation = false
        searchController.searchBar.placeholder = "Search Currency"
        
        self.navigationItem.searchController = searchController
        self.definesPresentationContext = true
    }
    
    @IBAction func orderAction(_ sender: UIBarButtonItem) {
        let alertController = UIAlertController(title: "Ordenar moedas por:", message: nil, preferredStyle: .actionSheet)
        
        let ordenCode = UIAlertAction(title: "CÃ³digo", style: .default, handler: { (action) in
            self.isCheckedOrdeCode = true
            self.isCheckedOrdeName = false
            
            guard let viewModel = self.viewModel else { return }
            self.interactor.orderCurrenciesByCode(currencies: viewModel.currencies)
        })
        ordenCode.setValue(self.isCheckedOrdeCode, forKey: "checked")
        alertController.addAction(ordenCode)
        
        let orderName = UIAlertAction(title: "Nome", style: .default, handler: { (action) in
            self.isCheckedOrdeCode = false
            self.isCheckedOrdeName = true
            
            guard let viewModel = self.viewModel else { return }
            self.interactor.orderCurrenciesByName(currencies: viewModel.currencies)
        })
        orderName.setValue(self.isCheckedOrdeName, forKey: "checked")
        alertController.addAction(orderName)
        
        alertController.addAction(UIAlertAction(title: "Cancelar", style: .cancel, handler: nil))
        
        self.present(alertController, animated: true, completion: nil)
    }
    
}
