//
//  CoinListingRouter.swift
//  DesafioBTG
//
//  Created by Robson Moreira on 17/02/20.
//  Copyright (c) 2020 Robson Moreira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class CoinListingRouter: NSObject, CoinListingRoutingDelegate, CoinListingDataPassing {
    
    weak var viewController: CoinListingViewController!
    var dataStore: CoinListingDataStore?
    
    func routeToConversion(segue: UIStoryboardSegue?) {
        if segue == nil {
            let index = self.viewController.navigationController!.viewControllers.count - 2
            let destinationVC = self.viewController.navigationController?.viewControllers[index] as! ConversionViewController
            self.navigateToConversion(source: self.viewController!, destination: destinationVC)
        }
    }
    
    func routeToConversionSourceCurrency(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! ConversionViewController
            
            guard
                let dataStore = self.dataStore,
                let router = destinationVC.router,
                var destinationDS = router.dataStore else { return }
            
            self.passDataToConversionSourceCurrency(source: dataStore, destination: &destinationDS)
        } else {
            let index = self.viewController.navigationController!.viewControllers.count - 2
            let destinationVC = self.viewController.navigationController?.viewControllers[index] as! ConversionViewController
            
            guard
                let dataStore = self.dataStore,
                let router = destinationVC.router,
                var destinationDS = router.dataStore else { return }
            
            self.passDataToConversionSourceCurrency(source: dataStore, destination: &destinationDS)
            self.navigateToConversion(source: self.viewController, destination: destinationVC)
        }
    }
    
    func routeToConversionToCurrency(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! ConversionViewController
            
            guard
                let dataStore = self.dataStore,
                let router = destinationVC.router,
                var destinationDS = router.dataStore else { return }
            
            self.passDataToConversionToCurrency(source: dataStore, destination: &destinationDS)
        } else {
            let index = self.viewController.navigationController!.viewControllers.count - 2
            let destinationVC = self.viewController.navigationController?.viewControllers[index] as! ConversionViewController
            
            guard
                let dataStore = self.dataStore,
                let router = destinationVC.router,
                var destinationDS = router.dataStore else { return }
            
            self.passDataToConversionToCurrency(source: dataStore, destination: &destinationDS)
            self.navigateToConversion(source: self.viewController, destination: destinationVC)
        }
    }
    
    func navigateToConversion(source: CoinListingViewController, destination: ConversionViewController) {
        source.navigationController?.popViewController(animated: true)
    }
    
    func passDataToConversionSourceCurrency(source: CoinListingDataStore, destination: inout ConversionDataStore) {
        if let currency = source.currency {
            destination.sourceButtonText = currency.currencyCode
        }
    }
    
    func passDataToConversionToCurrency(source: CoinListingDataStore, destination: inout ConversionDataStore) {
        if let currency = source.currency {
            destination.toButtonText = currency.currencyCode
        }
    }
    
}
