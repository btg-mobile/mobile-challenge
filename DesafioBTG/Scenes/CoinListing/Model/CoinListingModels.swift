//
//  CoinListingModels.swift
//  DesafioBTG
//
//  Created by Robson Moreira on 17/02/20.
//  Copyright (c) 2020 Robson Moreira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum CoinListing {
    
    enum Currencies {
        
        struct Request: Codable {}
        
        struct Response: Codable {
            var currencies: [String: String]
        }
        
        struct Currency {
            var currencyCode: String
            var currencyCountry: String
        }
        
        struct ViewModel {
            var currencies: [Currency]
            var currenciesFiltered: [Currency]
            var countOfCurrencies: Int {
                return currencies.count
            }
        }
        
    }
    
}

extension CoinListing.Currencies.Response {
    
    func mapFromCurrencies() -> [CoinListing.Currencies.Currency] {
        var currencies: [CoinListing.Currencies.Currency] = []
        for (key, value) in self.currencies {
            currencies.append(CoinListing.Currencies.Currency(currencyCode: key, currencyCountry: value))
        }
        return currencies
    }
    
}
