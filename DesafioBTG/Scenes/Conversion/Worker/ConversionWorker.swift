//
//  ConversionWorker.swift
//  DesafioBTG
//
//  Created by Robson Moreira on 18/02/20.
//  Copyright (c) 2020 Robson Moreira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class ConversionWorker {
    
    private let constUSD: String = "USD"
    
    func fetchConvertedCurrency(request:Conversion.Quotes.Request, completion: @escaping (Conversion.Quotes.Quote?, Error?) -> ()) {
        if request.source == constUSD {
            self.getQuotes(request: request, completion: completion)
        } else {
            let requestDolar = Conversion.Quotes.Request(currency: request.source, source: constUSD, value: 1.0)
            self.getQuotes(request: requestDolar) { (response, error) in
                let value = (request.value / response!.fromTo)
                let requestSource = Conversion.Quotes.Request(currency: request.currency, source: self.constUSD, value: value)
                self.getQuotes(request: requestSource) { (response, error) in
                    completion(response, error)
                }
            }
        }
    }
    
    private func getQuotes(request:Conversion.Quotes.Request, completion: @escaping (Conversion.Quotes.Quote?, Error?) -> ()) {
        do {
            let data = try JSONEncoder().encode(request)
            let dictionary = try JSONSerialization.jsonObject(with: data, options: []) as? [String: Any]
            if let parameters = dictionary {
                ConversionAPIStore().getQuotes(parameters: parameters) { (response, error) in
                    var quote: Conversion.Quotes.Quote?
                    if let response = response {
                        let quoteMap = response.mapFromQuote()
                        quote = Conversion.Quotes.Quote(fromTo: (quoteMap.fromTo * request.value))
                    }
                    completion(quote, error)
                }
            } else {
                completion(nil, NSError(domain: "", code: 0, userInfo: [NSLocalizedDescriptionKey: "Error converting to dictionary"]))
            }
        } catch {
            completion(nil, error)
        }
        
    }
    
}
