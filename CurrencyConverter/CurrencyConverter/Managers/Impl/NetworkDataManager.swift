//
//  NetworkDataManager.swift
//  CurrencyConverter
//
//  Created by Tiago Chaves on 09/02/20.
//  Copyright (c) 2020 Tiago Chaves. All rights reserved.
//
//  This file was generated by Toledo's Swift Xcode Templates
//

import Foundation

extension CurrencyConverterRequests {
    static let baseURL = "http://api.currencylayer.com"
//    #error("Para compilar de forma correta você deve criar, no projeto, um Swift File conforme exemplo abaixo ou colocar um chave válida na constante accessKey. Após realizar uma das duas ações, comente ou apague esse #error e compile novamente. :)")
    /*
     //Exemplo do arquivo necessário com uma access key válida
     struct AccessKey {
        static let accessKey = "Uma access key válida"
     }
     */
    static let accessKey = AccessKey.accessKey
    
    var url: URL? {
        var path = ""
        
        switch self {
        case .getExchangeRates:
            path = "/live"
        case .getSupportedCurrencies:
            path = "/list"
        }
        return URL(string: "\(CurrencyConverterRequests.baseURL)\(path)?access_key=\(CurrencyConverterRequests.accessKey)")
    }
}

struct NetworkDataManager<T>: DataManager {
    func request<T>(_ request: CurrencyConverterRequests, completion: @escaping (T?, Error?) -> ()) {
        guard let url = request.url else {
            completion(nil, nil)
            return
        }
        
        URLSession.shared.dataTask(with: url) { (data, response, error) in
            if error == nil {
                
            }else{
                
            }
        }
    }
    
    private func decode<T: Decodable>(_ data: Data) throws -> T? {
        do {
            let decoder = JSONDecoder()
            let decodedData = try decoder.decode(T.self, from: data)
            
            return decodedData
        } catch {
            throw error
        }
    }
}
