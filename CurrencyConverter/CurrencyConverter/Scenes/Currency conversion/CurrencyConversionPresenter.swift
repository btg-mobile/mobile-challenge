//
//  CurrencyConversionPresenter.swift
//  CurrencyConverter
//
//  Created by Tiago Chaves on 09/02/20.
//  Copyright (c) 2020 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrencyConversionPresentationLogic {
    func loadSupportedCurrencyStatus(response: CurrencyConversion.LoadSupportedCurrencies.Response)
    func getExchangeRatesStatus(response: CurrencyConversion.GetExchangeRates.Response)
    func formatNumericValueToText(response: CurrencyConversion.FormatTextField.Response)
}

class CurrencyConversionPresenter: CurrencyConversionPresentationLogic {
    weak var viewController: CurrencyConversionDisplayLogic?
    
    // MARK: - Get supported currencies status
    func loadSupportedCurrencyStatus(response: CurrencyConversion.LoadSupportedCurrencies.Response) {
        if response.success {
            viewController?.supportedCurrenciesLoaded()
        } else {
            viewController?.displayErrorMessage("Error trying to retrieve supported currencies.")
        }
    }
    
    // MARK: - Get exchange rates status
    func getExchangeRatesStatus(response: CurrencyConversion.GetExchangeRates.Response) {
        if response.success {
            viewController?.exchangeRatesLoaded()
        } else {
            viewController?.displayErrorMessage("Error trying to retrieve exchange rates.")
        }
    }
    
    //MARK: - Format number to text
    func formatNumericValueToText(response: CurrencyConversion.FormatTextField.Response) {
        guard let formattedNewValue = NumberFormatter().format(response.number, toCurrency: response.currencyInitials),
            response.number != -1 else {
                viewController?.displayErrorMessage("Error trying to format currency.")
                return
        }
        
        let viewModel = CurrencyConversion.FormatTextField.ViewModel(formattedText: formattedNewValue, textField: response.textField)
        viewController?.displayFormattedValue(viewModel: viewModel)
    }
}
