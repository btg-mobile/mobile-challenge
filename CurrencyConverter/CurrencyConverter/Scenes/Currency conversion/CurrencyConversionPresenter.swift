//
//  CurrencyConversionPresenter.swift
//  CurrencyConverter
//
//  Created by Tiago Chaves on 09/02/20.
//  Copyright (c) 2020 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrencyConversionPresentationLogic {
    func formatCurrencyListForView(response: CurrencyConversion.LoadSupportedCurrencies.Response)
    func getExchangeRatesFailed()
}

class CurrencyConversionPresenter: CurrencyConversionPresentationLogic {
    weak var viewController: CurrencyConversionDisplayLogic?
    
    // MARK: - Load supported currency
    func formatCurrencyListForView(response: CurrencyConversion.LoadSupportedCurrencies.Response) {
        guard let currencies = response.currencies,
            currencies.success,
            response.error == nil else {
                viewController?.displayErrorMessage("Erro na API")
                return
        }
        
        let viewModelCurrencies = getCurrencyViewModel(fromResponse: currencies)
        let viewModel = CurrencyConversion.LoadSupportedCurrencies.ViewModel(currencies: viewModelCurrencies)
        viewController?.loadSupportedCurrencies(viewModel: viewModel)
    }
    
    private func getCurrencyViewModel(fromResponse response: SupportedCurrencies) -> [Currency] {
        var currencies: [Currency] = []
        
        for (key, value) in response.currencies {
            currencies.append(Currency(initials: key, name: value))
        }
        
        return currencies
    }
    
    // MARK: - Error trying to get exchange rates
    func getExchangeRatesFailed() {
        viewController?.displayErrorMessage("Erro na API")
    }
}
