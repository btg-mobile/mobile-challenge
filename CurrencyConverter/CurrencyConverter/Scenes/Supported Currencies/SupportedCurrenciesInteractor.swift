//
//  SupportedCurrenciesInteractor.swift
//  CurrencyConverter
//
//  Created by Tiago Chaves on 12/02/20.
//  Copyright (c) 2020 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SupportedCurrenciesBusinessLogic {
    func loadSupportedCurrencies(request: SupportedCurrenciesVIPModels.LoadSupportedCurrencies.Request)
    func filterSupportedCurrencies(request: SupportedCurrenciesVIPModels.Filter.Request)
}

protocol SupportedCurrenciesDataStore {
    var supportedCurrencies: SupportedCurrencies? { get set }
    var currencyType: CurrencyType { get set }
}

class SupportedCurrenciesInteractor: SupportedCurrenciesBusinessLogic, SupportedCurrenciesDataStore {
    var presenter: SupportedCurrenciesPresentationLogic?
    var supportedCurrencies: SupportedCurrencies?
    var currencyType: CurrencyType = .source
    
    // MARK: - Load supported currencies
    func loadSupportedCurrencies(request: SupportedCurrenciesVIPModels.LoadSupportedCurrencies.Request) {
        guard let supportedCurrencies = self.supportedCurrencies else {
            return
        }
        let response = SupportedCurrenciesVIPModels.LoadSupportedCurrencies.Response(currencies: supportedCurrencies,
                                                                                     currencyType: self.currencyType)
        presenter?.formatCurrencyList(response: response)
    }
    
    //MARK: - Filter
    func filterSupportedCurrencies(request: SupportedCurrenciesVIPModels.Filter.Request) {
        guard let currencies = supportedCurrencies?.currencies else {
            return
        }
        let filter = request.filter
        let filteredCurrencies = currencies.filter { (initials, name) -> Bool in
            return initials.uppercased().contains(filter.uppercased()) || name.uppercased().contains(filter.uppercased())
        }
        
        let response = SupportedCurrenciesVIPModels.Filter.Response(currencies: filteredCurrencies)
        presenter?.formatFilteredCurrencyList(response: response)
    }
}
