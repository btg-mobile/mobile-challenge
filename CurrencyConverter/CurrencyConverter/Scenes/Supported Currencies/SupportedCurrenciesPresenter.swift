//
//  SupportedCurrenciesPresenter.swift
//  CurrencyConverter
//
//  Created by Tiago Chaves on 12/02/20.
//  Copyright (c) 2020 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SupportedCurrenciesPresentationLogic {
    func formatCurrencyList(response: SupportedCurrenciesVIPModels.LoadSupportedCurrencies.Response)
    func formatFilteredCurrencyList(response: SupportedCurrenciesVIPModels.Filter.Response)
}

class SupportedCurrenciesPresenter: SupportedCurrenciesPresentationLogic {
    weak var viewController: SupportedCurrenciesDisplayLogic?
    
    // MARK: - Load supported currency
    func formatCurrencyList(response: SupportedCurrenciesVIPModels.LoadSupportedCurrencies.Response) {
        let currencies = response.currencies
        let viewModelCurrencies = getCurrencyViewModel(fromResponse: currencies.currencies)
        let viewModel = SupportedCurrenciesVIPModels.LoadSupportedCurrencies.ViewModel(currencies: viewModelCurrencies,
                                                                                       currencyType: response.currencyType)
        viewController?.displaySupportedCurrenciesList(viewModel: viewModel)
    }
    
    //MARK: - Filter
    func formatFilteredCurrencyList(response: SupportedCurrenciesVIPModels.Filter.Response) {
        let currencies = response.currencies
        let viewModelCurrencies = getCurrencyViewModel(fromResponse: currencies)
        let viewModel = SupportedCurrenciesVIPModels.Filter.ViewModel(currencies: viewModelCurrencies)
        viewController?.displatFilteredList(viewModel: viewModel)
    }
    
    private func getCurrencyViewModel(fromResponse response: [String: String]) -> [Currency] {
        var currencies: [Currency] = []
        
        for (key, value) in response {
            currencies.append(Currency(initials: key, name: value))
        }
        
        return currencies.sorted(by: <)
    }
}
